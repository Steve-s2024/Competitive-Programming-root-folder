# does not deserve to be hard other than the difficulty
# of finding out what it wants, it want you to remove nodes that 
# are inside 'initial' instead of any node in the network (missed that information
# and wasted a long time), brute force worked easily: 19%

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        infected = set()
        n = len(graph)
        res = -1
        min_ = float('inf')
        initial.sort()
        def dfs(i):
            for j in range(n):
                if graph[i][j] == 1 and j not in infected:
                    infected.add(j)
                    dfs(j)
        for i in initial:
            infected = set()
            infected.add(i)
            for j in initial:
                if j not in infected:
                    infected.add(j)
                    dfs(j)
            infected.remove(i)
            # print(i, len(infected))
            if len(infected) < min_:
                min_ = len(infected)
                res = i
        return res 